{"version":3,"sources":["browserHistory.ts","components/templates/MainTemplate/styles.ts","components/templates/MainTemplate/index.tsx","pages/HomePage/index.tsx","pages/SamplesPage/index.tsx","store/samples/actions.js","components/App/index.tsx","store/app/reducer.js","store/samples/reducer.js","store/rootReducer.js","store/app/actions.js","store/app/saga.js","store/samples/saga.js","store/rootSaga.js","store/index.js","index.tsx"],"names":["createBrowserHistory","Wrapper","styled","div","MainTemplate","children","to","HomePage","mapDispatchToProps","fetchSamplesData","type","connect","state","samples","getIn","props","useEffect","map","sample","index","key","id","name","renderSample","App","history","path","exact","component","SamplesPage","initialState","Map","loading","initialSuccess","errors","message","list","data","item","combineReducers","app","action","setIn","set","payload","changeLocation","actionWatcher","push","takeLatest","fetchMasterData","response","put","rootSaga","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85628732.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  min-width: 1000px;\n`;\n\nexport const Header = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0;\n  left: 0;\n  z-index: 99;\n`;\n\nexport const Body = styled.div`\n  padding-left: 180px;\n  padding-top: 40px;\n  position: relative;\n  z-index: 1;\n  height: 100vh;\n`;\n\nexport const Sidebar = styled.div`\n  position: fixed;\n  top: 40px;\n  left: 0px;\n  float: left;\n`;\n\nexport const SideContent = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: table;\n`;\n\nexport const Breadcumb = styled.div`\n  display: flex;\n  line-height: 40px;\n  font-size: 18px;\n  padding-left: 25px;\n  background-color: #FFFFFF;\n  border-bottom: 1px solid #D4D8DD;\n`;\n\nexport const WrapContent = styled.div`\n  background-color: #EFF1F4;\n  height: 100%;\n  display: table-row;\n`;\n\nexport const TopMessage = styled.div`\n  position: absolute;\n  top: 0px;\n  width: 100%;\n`;\n\nexport const Content = styled.div`\n  padding-left: 16px;\n  padding-top: 15px;\n  width: 900px;\n`;\n","import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport {\n  Wrapper\n} from './styles';\n\ninterface IProps { children: ReactNode; }\n\nconst MainTemplate = ({ children }: IProps) => {\n  return (\n    <Wrapper>\n      <div>\n        <Link to='/'>Home</Link>\n        <Link to='/sample'>Sample</Link>\n      </div>\n      { children }\n    </Wrapper>\n  );\n};\n\nexport default MainTemplate;\n","import React from 'react';\n\nimport { MainTemplate } from \"components\";\n\nconst HomePage = () => {\n  return (\n    <MainTemplate>\n      <div>\n        <h2>HOME PAGE</h2>\n      </div>\n    </MainTemplate>\n  );\n}\n\nexport default HomePage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { MainTemplate } from \"components\";\nimport { fetchSamplesData } from 'store/samples/actions';\n\nconst renderSample = (samples: any) => {\n  return samples.map((sample: any, index: number) => {\n    return (<div key={index}>\n        { `ID: ${sample.id} - NAME: ${sample.name}` }\n      </div>\n    )\n  })\n}\n\nconst SamplesPage = (props: any) => {\n  const { samples, fetchSamplesData } = props;\n\n  useEffect(() => {\n    fetchSamplesData();\n  }, [fetchSamplesData]);\n\n  return (\n    <MainTemplate>\n      <div>\n        <h2>Samples</h2>\n        <div>\n          { renderSample(samples) }\n        </div>\n      </div>\n    </MainTemplate>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    samples: state.getIn(['samples', 'list', 'data'])\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchSamplesData\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SamplesPage);\n","export const FETCH_SAMPLES_REQUEST = 'FETCH_SAMPLES_REQUEST';\nexport const FETCH_SAMPLES_SUCCESS = 'FETCH_SAMPLES_SUCCESS';\n\nexport const fetchSamplesData = () => {\n  return {\n    type: FETCH_SAMPLES_REQUEST\n  }\n}\n","import React, { Fragment } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport history from 'browserHistory';\nimport 'assets/styles/App.scss';\n\nimport { HomePage, SamplesPage }  from 'pages';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Router history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/samples\" exact component={SamplesPage} />\n      </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import {\n  INIT_APP_START,\n  INIT_APP_FINISH,\n  SET_APP_MESSAGE,\n  CLEAR_APP_MESSAGE\n} from './actions';\nimport { Map } from 'immutable';\n\nconst initialState = Map({\n  loading: false,\n  initialSuccess: false,\n  errors: [],\n  message: null\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_APP_START:\n      return state.setIn(['loading'], true);\n    case INIT_APP_FINISH:\n      return state\n        .set('loading', false)\n        .set('initialSuccess', true);\n    case SET_APP_MESSAGE:\n      return state\n        .set('message', action.payload);\n    case CLEAR_APP_MESSAGE:\n      return state\n        .set('message', null)\n    default:\n      return state;\n  }\n}\n","import { Map } from 'immutable';\n\nimport { FETCH_SAMPLES_REQUEST, FETCH_SAMPLES_SUCCESS } from './actions';\n\nexport const initialState = Map({\n  list: Map({\n    data: [],\n    loading: false\n  }),\n  item: Map({\n    data: null,\n    loading: false,\n    errors: null\n  })\n})\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SAMPLES_REQUEST:\n      return state.set('loading', true);\n    case FETCH_SAMPLES_SUCCESS:\n      return state.set('loading', false).setIn(['list', 'data'], action.payload);\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux-immutable';\nimport app from './app/reducer';\nimport samples from './samples/reducer';\n\n\nexport default combineReducers({\n  app,\n  samples\n});\n","export const INIT_APP_START          = 'INIT_APP_START';\nexport const INIT_APP_CHECK_PROGRESS = 'INIT_APP_CHECK_PROGRESS';\nexport const INIT_APP_FINISH         = 'INIT_APP_FINISH';\nexport const CHANGE_LOCATION         = 'CHANGE_LOCATION';\nexport const SET_APP_MESSAGE         = 'SET_APP_MESSAGE';\nexport const CLEAR_APP_MESSAGE       = 'CLEAR_APP_MESSAGE';\n\nexport const initAppStart = () => (\n  {\n    type: INIT_APP_START\n  }\n)\n\nexport const changeLocation = (location) => (\n  {\n    type: CHANGE_LOCATION,\n    payload: location\n  }\n)\n\nexport const setAppMessage = (message) => (\n  {\n    type: SET_APP_MESSAGE,\n    payload: message\n  }\n)\n\nexport const clearAppMessage = () => (\n  {\n    type: CLEAR_APP_MESSAGE\n  }\n)\n","import { takeLatest } from 'redux-saga/effects';\n\nimport {\n  CHANGE_LOCATION\n} from './actions';\nimport history from 'browserHistory';\n\nexport function* changeLocation({ payload }) {\n  yield history.push(payload);\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(CHANGE_LOCATION, changeLocation);\n}\n","import { put, takeLatest } from 'redux-saga/effects';\n\nimport { FETCH_SAMPLES_REQUEST, FETCH_SAMPLES_SUCCESS } from './actions';\n// import * as SampleApi from 'api/app/samples';\n\nexport function* fetchMasterData() {\n  // const response = yield call(SampleApi.getAll);\n\n  const response = [\n    { id: 1, name: 'sample 1' },\n    {id: 2, name: 'sample 2'}\n  ]\n\n  yield put({ type: FETCH_SAMPLES_SUCCESS, payload: response });\n}\n\nexport default function* actionWatcher() {\n  yield takeLatest(FETCH_SAMPLES_REQUEST, fetchMasterData);\n}\n","import { all } from 'redux-saga/effects';\nimport app from './app/saga';\nimport samples from './samples/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    app(),\n    samples()\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}